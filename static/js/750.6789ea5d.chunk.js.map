{"version":3,"file":"static/js/750.6789ea5d.chunk.js","mappings":"0KACA,EAA6B,gCAA7B,EAA2I,sCAA3I,EAA8L,gC,qFCA9L,EAAyB,8B,SCwDzB,EAnDsB,SAACA,GAErB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,CAACC,UAAU,EAAOC,OAAQJ,EAAMI,SAAQC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAApEM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GA6BpB,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEC,SAAA,EACbJ,EAAMJ,WACNS,EAAAA,EAAAA,KAAA,OAAKF,UAAWG,EAASF,UACvBC,EAAAA,EAAAA,KAAA,QAAME,cA9BW,WAGvBN,GAAQO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGR,GAAK,IAAEJ,UAAU,IAChC,EA0B8CQ,SAAEX,EAAMI,QAAU,oEAI3DG,EAAMJ,WACLS,EAAAA,EAAAA,KAAA,OAAKF,UAAU,GAAEC,UACfC,EAAAA,EAAAA,KAAA,SAAOI,OAvBY,WAE1BR,GAAQO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNR,GAAK,IACRJ,UAAU,KAEXH,EAAMiB,aAAaV,EAAMH,OAK1B,EAaec,WAAW,EAAMC,KAAK,OACtBC,MAAOb,EAAMH,OACbiB,SAjCQ,SAACC,GACtBd,GAAQO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLR,GAAK,IACRH,OAAQkB,EAAEC,cAAcH,QAE5B,QAiCF,EC/BA,EAnBoB,SAAHI,GAAyC,IAApCC,EAAOD,EAAPC,QAASrB,EAAMoB,EAANpB,OAAQa,EAAYO,EAAZP,aAErC,OAAIQ,GAKFhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEC,SAAA,EACfC,EAAAA,EAAAA,KAAA,OAAKc,IAAKC,EAAWC,IAAI,MAAMlB,UAAWG,KAC1CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWG,EAAmBF,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKc,IAAKD,EAAQI,OAAOC,MAAOpB,UAAaG,EAAce,IAAI,MAC/DhB,EAAAA,EAAAA,KAAA,QAAAD,SAAOc,EAAQM,YACftB,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,gFAAkBc,EAAQO,eAElCpB,EAAAA,EAAAA,KAACqB,EAAa,CAAC7B,OAAUA,EAAQa,aAAgBA,QAX5CL,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,GAcrB,E,UCrBA,EAA0D,4BAA1D,EAA8F,uBCA9F,EAAuB,mBAAvB,EAAqD,uBAArD,EAA2F,2BCiB3F,EAhBa,SAAClC,GACZ,OACES,EAAAA,EAAAA,MAAA,OAAKC,UAAWG,EAAOF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OACEc,IAAI,wFACJE,IAAI,GACJlB,UAAWG,KAEbJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWG,EAAeF,SAAA,CAC5BX,EAAMmC,SACP1B,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAYC,SAAA,CAAC,UAAQX,EAAMoC,mBAInD,E,uCCVMC,GAAcC,EAAAA,EAAAA,GAAiB,IA0BrC,GAJ4BC,EAAAA,EAAAA,GAAU,CACpCC,KAAM,yBADoBD,EApBL,SAACvC,GACtB,OACES,EAAAA,EAAAA,MAAA,QAAMgC,SAAUzC,EAAM0C,aAAa/B,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,GAAEC,UACfC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CACJC,SAAU,CAACC,EAAAA,EAAeR,GAC1BS,UAAWC,EAAAA,GACXC,KAAM,cACNC,GAAG,GACHC,KAAK,KACLC,KAAK,UAGTvC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,GAAEC,UACfC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBAIhB,ICAA,EArBgByC,EAAAA,MAAW,SAACpD,GAE1B,IAEIqD,EAFYrD,EAAMsD,MAEQC,KAAI,SAACC,GAAE,OACnC5C,EAAAA,EAAAA,KAAC6C,EAAI,CAACrB,WAAYoB,EAAGpB,WAAYD,QAASqB,EAAGrB,SAAcqB,EAAGP,GAAM,IAOtE,OACExC,EAAAA,EAAAA,MAAA,OAAKC,UAAWG,EAAaF,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAC8C,EAAmB,CAACjB,SAPP,SAACkB,GACjB3D,EAAM4D,QAAQD,EAAOE,YACvB,KAMIpD,EAAAA,EAAAA,MAAA,OAAKC,UAAWG,EAAQF,SAAA,CAAE0C,EAAc,SAG9C,I,UCyBA,GADyBS,EAAAA,EAAAA,KAdJ,SAACvD,GACpB,MAAO,CACL+C,MAAO/C,EAAMwD,YAAYT,MACzBO,YAAatD,EAAMwD,YAAYF,YAEnC,IAEwB,SAACG,GACvB,MAAO,CACLJ,QAAS,SAACC,GACRG,GAASC,EAAAA,EAAAA,IAAqBJ,GAChC,EAEJ,GACyBC,CAA6CI,GChCtE,EAbgB,SAAClE,GAEf,OACES,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACuD,EAAW,CAAC1C,QAAWzB,EAAMyB,QAC9BrB,OAAUJ,EAAMI,OAChBa,aAAgBjB,EAAMiB,gBAEtBL,EAAAA,EAAAA,KAACwD,EAAgB,MAGvB,E,oBC2DA,GAAeC,E,QAAAA,KACbP,EAAAA,EAAAA,KAhBsB,SAACvD,GAEvB,MAAO,CACLkB,QAASlB,EAAMwD,YAAYtC,QAC3BrB,OAAQG,EAAMwD,YAAY3D,OAC1BkE,iBAAkB/D,EAAMgE,KAAKC,OAC7BC,OAAQlE,EAAMgE,KAAKE,OAEvB,GAQ2B,CAAEC,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW1D,aAAAA,EAAAA,KACtD2D,EAAAA,EAFF,EA5CyB,SAAC5E,GAExB,IAAMwE,GAAWK,EAAAA,EAAAA,MAAXL,OAEDA,IACHA,EAASxE,EAAMsE,kBAGjB,IAAKI,EAA6B1E,EAA7B0E,eAAgBC,EAAa3E,EAAb2E,UASrB,OANAG,EAAAA,EAAAA,YAAW,WAETJ,EAAeF,GACfG,EAAUH,EACZ,GAAG,CAACA,EAAQE,EAAgBC,KAI1B/D,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACmE,EAAO,CAACtD,QAASzB,EAAMyB,QACfrB,OAAUJ,EAAMI,OAChBa,aAAgBjB,EAAMiB,gBAIrC,G","sources":["webpack://prytkov-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://prytkov-app/./src/components/Profile/ProfileInfo/ProfileStatus.module.css?417b","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://prytkov-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://prytkov-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostReduxInput/MyPostReduxInput.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_bg\":\"ProfileInfo_profile_bg__8WgpM\",\"user_wall_wrapper\":\"ProfileInfo_user_wall_wrapper__tHt1I\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__GUvly\",\"largePhoto\":\"ProfileInfo_largePhoto__FVRqw\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__sj900\"};","//import Preloader from \"../../common/preloader/Preloader\";\n\nimport  React  from 'react';\nimport { useState } from 'react';\nimport s from './ProfileStatus.module.css';\n\nconst ProfileStatus = (props) => {\n  \n  let [state, setState] = useState({editMode: false, status: props.status});\n\n\n  const activateEditMode = () => {\n    //setState - асинхронен\n    \n    setState({...state, editMode: true});\n  }\n\n  const onStatusChange = (e) => {\n    setState({\n      ...state,\n      status: e.currentTarget.value\n    })\n  }\n\n  const deactivateEditMode = () => {\n    // setState - асинхронен\n   setState({\n    ...state,\n    editMode: false\n   })\n   props.updateStatus(state.status);\n   \n        //props.updateStatus(title); \n    \n   // props.updateStatus(props.status);\n  }\n\n  return (\n    <div className=\"\">\n      {!state.editMode && (\n        <div className={s.status}>\n          <span onDoubleClick={activateEditMode}>{props.status || 'Без статуса'}</span>\n        </div>\n      )}\n\n      {state.editMode && (\n        <div className=\"\">\n          <input onBlur={deactivateEditMode} \n                 autoFocus={true} type=\"text\"\n                 value={state.status} \n                 onChange={onStatusChange}/>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import s from \"./ProfileInfo.module.css\";\nimport profileBg from \"../profileBg.jpg\";\nimport Preloader from \"../../common/preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n\n  if(!profile){\n    return <Preloader/>\n  }\n\n  return (\n    <div className=\"\">\n      <img src={profileBg} alt=\"img\" className={s.profile_bg} />\n      <div className={s.descriptionBlock}>\n        <img src={profile.photos.large} className = {s.largePhoto} alt=\"\" />\n        <span>{profile.fullName}</span>\n        <span> O пользователе: {profile.aboutMe}</span>\n      </div>\n      <ProfileStatus status = {status} updateStatus = {updateStatus}></ProfileStatus>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPosts_item__VmUCL\",\"postsBlock\":\"MyPosts_postsBlock__IkiKD\",\"posts\":\"MyPosts_posts__cWzxi\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__4lny9\",\"post_ava\":\"Post_post_ava__T7RuT\",\"messagesInfo\":\"Post_messagesInfo__0WDGI\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://img.freepik.com/premium-vector/cartoon-funny-monkey-face-avatar_6996-1144.jpg\"\r\n        alt=\"\"\r\n        className={s.post_ava}\r\n      />\r\n      <div className={s.messagesInfo}>\r\n        {props.message}\r\n        <span className=\"like_count\">Likes: {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  requiredField,\n} from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../../common/preloader/formsControls/formsControls\";\nconst maxLength30 = maxLengthCreator(30);\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className=\"\">\n        <Field\n          validate={[requiredField, maxLength30]}\n          component={TextArea}\n          name={\"newPostText\"}\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n        />\n      </div>\n      <div className=\"\">\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddNewPostReduxForm = reduxForm({\n  form: \"ProfileAddNewPostForm\",\n})(AddNewPostForm);\n\nexport default AddNewPostReduxForm;\n","import s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport AddNewPostReduxForm from \"./MyPostReduxInput/MyPostReduxInput\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  //let newPostElement = React.createRef();\r\n  let postsData = props.posts;\r\n\r\n  let postsElements = postsData.map((el) => (\r\n    <Post likesCount={el.likesCount} message={el.message} key={el.id} />\r\n  ));\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements} </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import {\r\n  addPostActionCreator\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// const MyPostsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState();\r\n//         const addPost = () => {\r\n//           store.dispatch(addPostActionCreator());\r\n//         };\r\n\r\n//         let onPostChange = (text) => {\r\n//           let action = updateNewPostTextActionCreator(text);\r\n//           store.dispatch(action);\r\n//         };\r\n\r\n//         return (\r\n//           <MyPosts\r\n//             updateNewPostText={onPostChange}\r\n//             addPost={addPost}\r\n//             posts={state.profilePage.posts}\r\n//             newPostText={state.profilePage.newPostText}\r\n//           ></MyPosts>\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\n\r\nlet mapStateToProps =(state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n  return {   \r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    },\r\n  }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo.jsx\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer.jsx\";\r\n\r\nconst Profile = (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      <ProfileInfo profile = {props.profile}\r\n      status = {props.status}\r\n      updateStatus = {props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useEffect } from \"react\";\nimport Profile from \"./Profile.jsx\";\nimport { connect } from \"react-redux\";\nimport {getUserProfile, getStatus, updateStatus } from \"../../redux/profileReducer.js\";\nimport { useParams } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../hoc/AuthRedirect.jsx\";\nimport { compose } from \"redux\";\n\n// Убрал классовый компонент из-за невозможности использование withRoutes, сделал все с помощью хуков\n\n// class ProfileContainerAPI extends React.Component {\n//   componentDidMount(){\n//     axios\n//     .get(`https://social-network.samuraijs.com/api/1.0/profile/2`)\n//     .then((response) => {\n\n//       this.props.setUserProfile(response.data);\n\n//     });\n//   }\n//   render(){\n//     return (\n//       <div>\n//         <Profile {...this.props} profile={this.props.profile}/>\n//     </div>\n//     )\n//   }\n// }\n\nconst ProfileContainer = (props) => {\n\n  let { userId } = useParams();\n  \n  if (!userId) {\n    userId = props.authorizedUserId;\n  }\n  //Написал так чтоб избежать ошибки ESLint о зависимостях в useEffect;\n  let {getUserProfile, getStatus} = props; \n\n  \n  useEffect( () => {\n\n    getUserProfile(userId);\n    getStatus(userId);\n  }, [userId, getUserProfile, getStatus]);\n\n  return (\n    \n    <div>\n      <Profile profile={props.profile} \n               status = {props.status}\n               updateStatus = {props.updateStatus}\n               />\n    </div>\n  );\n};\n\n\nconst mapStateToProps = (state) => {\n\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  };\n};\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\n\n\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withAuthRedirect\n)(ProfileContainer);\n"],"names":["props","_useState","useState","editMode","status","_useState2","_slicedToArray","state","setState","_jsxs","className","children","_jsx","s","onDoubleClick","_objectSpread","onBlur","updateStatus","autoFocus","type","value","onChange","e","currentTarget","_ref","profile","src","profileBg","alt","photos","large","fullName","aboutMe","ProfileStatus","Preloader","message","likesCount","maxLength30","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","validate","requiredField","component","TextArea","name","id","cols","rows","React","postsElements","posts","map","el","Post","AddNewPostReduxForm","values","addPost","newPostText","connect","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","compose","authorizedUserId","auth","userId","isAuth","getUserProfile","getStatus","withAuthRedirect","useParams","useEffect","Profile"],"sourceRoot":""}